#version 450 core

layout(location = 0) in vec2 position;

out vec2 textureCoords;
out vec4 clipSpace;
out vec3 normal; // New varying variable for normal

uniform mat4 projection;
uniform mat4 view;
uniform mat4 model;

uniform vec4 plane;

void main() {
    vec2 scaledPosition = vec2(position.x * 6.0, position.y * 6.0);

    vec4 worldPosition = model * vec4(scaledPosition.x, 0.0, scaledPosition.y, 1.0);
    clipSpace = projection * view * model * vec4(position.x * 6, 0.0, position.y * 6, 1.0);
    gl_ClipDistance[0] = dot(worldPosition, plane);

    // Calculate the normal as a simple example (for a flat plane)
    normal = normalize(cross(vec3(1.0, 0.0, 0.0), vec3(0.0, 0.0, 1.0)));

    gl_Position = clipSpace;
    textureCoords = vec2(position.x / 2.0 + 0.5, position.y / 2.0 + 0.5);
}
